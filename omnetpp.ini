[General] #Non-functional
network = TraficGeneratorNetwork
sim-time-limit = 10s

#Statistics
#Enable only what we are interested in 
*.node[*].application[*].*.statistic-recording = true
#*.node[*].MCO.interferenceMonitor.*.statistic-recording = true
*.node[*].MCO.mgmt.*.statistic-recording = true
*.node[*].MCO.vehicleTable.*.statistic-recording = true
#And then disable the rest
**.statistic-recording = false
**.vector-record-eventnumbers = false
**.cmdenv-log-level = "off"

# Network settings
# radioMedium settings
*.radioMedium.neighborCache.typename = "VehiclesNeighborCache"
*.radioMedium.analogModel.typename = "ScalarAnalogModelAdjacentInterference"
*.radioMedium.analogModel.adjacentLoss = "25.9 40.6"
*.radioMedium.pathLoss.typename = "ECC68RuralPathLoss"
*.radioMedium.pathLoss.useFading = true
*.radioMedium.pathLoss.shapeFactor = 3.0

[MCOLoadBalancing]
# node settings
#*.nodes = density of vehicles(12.5, 25, 50, 75, 100) * number of kms(8) = 100, 200, 400, 600, 800
*.nodes = 100
*.node[*].numApplications = 7
*.node[*].numChannels = 7
# application settings
*.node[*].application[*].typename = "TrafficGenerator"
*.node[*].application[*].packetLength = 350B
# wlan settings
*.node[*].wlan[*].radio.transmitter.power = 0.1W #0.1W = 20 dBm, 20dBm + 3dBi(antenna gain) = 23dBm
# mobility settings
*.node[*].mobility.typename = "HighwayMobility"
#*.node[*].mobility.speed = speed value(number of nodes) = 325/9(100), 100/3(200), 275/9(400), 250/9(600), 200/9(800)
*.node[*].mobility.speed = mps(normal(325/9, 325/90))
*.node[*].mobility.updateInterval = 0s
# MCO settings
*.node[*].MCO.typename = "MCOLoadBalancing"
*.node[*].MCO.classifier.weights = "1 1 1 1 1 1 1" #Required if we use MCOLoadBalancing
*.node[*].MCO.mgmt.pdrDistanceStep = 100m
*.node[*].MCO.mgmt.pdrNumberIntervals = 30
*.node[*].MCO.interferenceMonitor.typename = "" #No interference monitor
*.node[*].MCO.vehicleTable.irtRange = 200m

[PredefinedSequencialMCO]
# node settings
#*.nodes = density of vehicles(12.5, 25, 50, 75, 100) * number of kms(8) = 100, 200, 400, 600, 800
*.nodes = 100
*.node[*].numApplications = 7
*.node[*].numChannels = 7
# application settings
*.node[*].application[*].typename = "TrafficGenerator"
*.node[*].application[*].packetLength = 350B
#*.node[*].application[*].packetRate = 500 #In order to flood the channels to test some features is necessary to increse the packet rate  
# wlan settings
*.node[*].wlan[*].radio.transmitter.power = 0.1W #0.1W = 20 dBm, 20dBm + 3dBi(antenna gain) = 23dBm
# mobility settings
*.node[*].mobility.typename = "HighwayMobility"
#*.node[*].mobility.speed = speed value(number of nodes) = 325/9(100), 100/3(200), 275/9(400), 250/9(600), 200/9(800)
*.node[*].mobility.speed = mps(normal(325/9, 325/90))
*.node[*].mobility.updateInterval = 0s
# MCO settings
*.node[*].MCO.typename = "PredefinedSequencialMCO"
*.node[*].MCO.classifier.sequence = "0 1 2 3 4 5 6" #Easier to analyze the results
*.node[*].MCO.mgmt.maxChannelCapacity = "0.62 0.62 0.62 0.62 0.62 0.62 0.62"
*.node[*].MCO.mgmt.adjustMaxChannelCapacity = false
*.node[*].MCO.mgmt.pdrDistanceStep = 100m
*.node[*].MCO.mgmt.pdrNumberIntervals = 30
*.node[*].MCO.interferenceMonitor.typename = "" #No interference monitor
*.node[*].MCO.vehicleTable.irtRange = 200m

[StaticLinearMobility]
# node settings
*.nodes = 8
*.node[*].numApplications = 1
*.node[*].numChannels = 7
# application settings
*.node[*].application[*].typename = "UniformSlottedTrafficGenerator"
*.node[*].application[*].packetLength = 500B
# wlan settings
*.node[*].wlan[*].radio.transmitter.power = 0.1W #0.1W = 20 dBm, 20dBm + 3dBi(antenna gain) = 23dBm
# mobility settings
*.node[*].mobility.typename = "StaticLinearMobility"
*.node[*].mobility.separation = 500m
# MCO settings
*.node[*].MCO.typename = "PredefinedSequentialMCO"
*.node[*].MCO.mgmt.adjustMaxChannelCapacity = false
*.node[*].MCO.mgmt.pdrDistanceStep = 100m
*.node[*].MCO.mgmt.pdrNumberIntervals = 10
*.node[*].MCO.interferenceMonitor.typename = "" #No interference monitor
*.node[*].MCO.vehicleTable.irtRange = 1000m

[StaticGridMobility]
extends = StaticLinearMobility

# node settings
*.nodes = 48
# mobility settings
*.node[*].mobility.typename = "StaticGridMobility"
*.node[*].mobility.constraintAreaMinX = 0m
*.node[*].mobility.constraintAreaMaxX = 800m
*.node[*].mobility.constraintAreaMinY = 0m
*.node[*].mobility.constraintAreaMaxY = 600m
*.node[*].mobility.numHosts = 48 #This value must be equal to the number of nodes in TrafficGeneratorNetwork

[Balanced_Traffic] #Non-functional
repeat = 5

# Network settings
# radioMedium settings
*.radioMedium.analogModel.adjacentLoss = ${adjacentLoss = "25.9 40.6", "32.1 46.4"}

# node settings
*.node[*].numApplications = 1
*.node[*].numChannels = 1
# application settings
*.node[*].application[*].typename = "DCCTrafficGenerator"
*.node[*].application[*].packetLength = 350B
# wlan settings
#*.node[nodes..].wlan[*].radio.channelNumber = ${channelNumber = 0, 1, 2}
*.node[*].wlan[*].radio.transmitter.power = ${txPower = 0.1W, 1W} #0.1W = 20 dBm, 20dBm + 3dBi(antenna gain) = 23dBm; 1W = 30 dBm, 30dBm + 3dBi(antenna gain) = 33dBm
# mobility settings
*.node[*].mobility.typename = "HighwayMobility"
#*.node[*].mobility.speed = speed value(number of nodes) = 325/9(100), 100/3(200), 275/9(400), 250/9(600), 200/9(800)
*.node[*].mobility.updateInterval = 0s
# MCO settings
*.node[*].MCO.typename = "MCOLoadBalancing"
*.node[*].MCO.classifier.weights = "1" #Required if we use MCOLoadBalancing
*.node[*].MCO.mgmt.typename = "TRSimulationMgmtMCO"
*.node[*].MCO.mgmt.pdrDistanceStep = 100m
*.node[*].MCO.mgmt.pdrNumberIntervals = 30
*.node[*].MCO.interferenceMonitor.typename = ""
*.node[*].MCO.vehicleTable.typename = "TRSimulationVehicleTable"
*.node[*].MCO.vehicleTable.irtRange = 200m

[Balanced_Traffic_Density_12_5]
extends = Balanced_Traffic

*.nodes = ${nodes = 50, 100}
*.node[50..].wlan[*].radio.channelNumber = ${channelNumber = 0, 1, 2}
*.node[*].mobility.speed = mps(normal(325/9, 325/90))

[Balanced_Traffic_Density_25]
extends = Balanced_Traffic

*.nodes = ${nodes = 100, 200}
*.node[100..].wlan[*].radio.channelNumber = ${channelNumber = 0, 1, 2}
*.node[*].mobility.speed = mps(normal(100/3, 100/30))

[Balanced_Traffic_Density_50]
extends = Balanced_Traffic

*.nodes = ${nodes = 200, 400}
*.node[200..].wlan[*].radio.channelNumber = ${channelNumber = 0, 1, 2}
*.node[*].mobility.speed = mps(normal(275/9, 275/90))

[Balanced_Traffic_Density_75]
extends = Balanced_Traffic

*.nodes = ${nodes = 300, 600}
*.node[300..].wlan[*].radio.channelNumber = ${channelNumber = 0, 1, 2}
*.node[*].mobility.speed = mps(normal(250/9, 250/90))

[Balanced_Traffic_Density_100]
extends = Balanced_Traffic

*.nodes = ${nodes = 400, 800}
*.node[400..].wlan[*].radio.channelNumber = ${channelNumber = 0, 1, 2}
*.node[*].mobility.speed = mps(normal(200/9, 200/90))

[FileNodeManager]
# node settings
*.nodes = 0 #If we use NodeManager this value must be 0
*.node[*].numApplications = 7
*.node[*].numChannels = 7
# application settings
*.node[*].application[*].typename = "UniformSlottedTrafficGenerator"
*.node[*].application[*].packetLength = 500B
# MCO settings
*.node[*].MCO.typename = "MCOLoadBalancing"
*.node[*].MCO.classifier.weights = "1 1 1 1 1 1 1" #Required if we use MCOLoadBalancing

# nodeManager settings
*.nodeManager.typename = "FileNodeManager"
*.nodeManager.filename = "nodes.txt"
